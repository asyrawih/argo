name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/sample-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get semantic version
      id: semver
      run: |
        # Install semantic-release dependencies
        npm install -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog

        # Get the next version (dry run)
        NEXT_VERSION=$(npx semantic-release --dry-run --no-ci | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+' || echo "")
        
        if [ -z "$NEXT_VERSION" ]; then
          # Fallback: get current version from git tags or use 0.1.0
          CURRENT_VERSION=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/^v//' || echo "0.0.0")
          
          # Check if this is a new commit since last tag
          if git describe --exact-match HEAD 2>/dev/null; then
            # This is a tagged commit
            VERSION=$CURRENT_VERSION
          else
            # This is not a tagged commit, increment patch version
            IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
            VERSION="$major.$minor.$((patch + 1))"
          fi
        else
          VERSION=$NEXT_VERSION
        fi

        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Determined version: $VERSION"

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=${{ steps.semver.outputs.VERSION }},enable={{is_default_branch}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./sample-backend
        file: ./sample-backend/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Output image details
      run: |
        echo "Image pushed with tags:"
        echo "${{ steps.meta.outputs.tags }}"
        echo ""
        echo "Version used: ${{ steps.semver.outputs.VERSION }}"
